---
import ThemeToggle from "./ThemeToggle.astro";

const navItems = [
  {
    title: "Programas",
    label: "programas",
    url: "/programas",
  },
  {
    title: "Problemas & Soluciones",
    label: "problemas-soluciones",
    url: "/problemas&soluciones",
  },

  {
    title: "Herramientas",
    label: "herramientas",
    url: "/herramientas",
  },
];
---

<header class="fixed top-0 z-10 flex justify-center w-full mx-auto mt-2">
  <nav
    class="overflow-x-auto whitespace-nowrap max-w-full sm:overflow-visible rounded-full bg-white/90 dark:bg-gray-800/90 backdrop-blur-md shadow-[0_3px_10px_rgb(0,0,0,0.2)] text-sm font-medium text-gray-600 dark:text-gray-200 px-3"
  >
    <div class="inline-flex items-center min-w-max">
      <!-- Botones para moverse atr치s y adelante -->
      <div class="mr-2 flex items-center space-x-2">
        <!-- Bot칩n ir atr치s -->
        <button
          id="btn-back"
          type="button"
          aria-label="Volver"
          class="p-1 rounded transition"
          onClick="history.back()"
        >
          <svg
            class="w-6 h-6 text-gray-600/85 dark:text-gray-300/85 hover:text-gray-600 hover:dark:text-gray-300"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M15 19l-7-7 7-7"></path>
          </svg>
        </button>

        <!-- Bot칩n ir adelante -->
        <button
          id="btn-fordward"
          type="button"
          aria-label="Adelante"
          class="p-1 rounded  transition"
          onClick="history.forward()"
        >
          <svg
            class="w-6 h-6 text-gray-600/85 dark:text-gray-300/85 hover:text-gray-600 hover:dark:text-gray-300"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
      </div>
      <!-- Links -->
      {
        navItems.map((link) => (
          <a
            class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500 "
            aria-label={link.label}
            href={link.url}
          >
            {link.title}
          </a>
        ))
      }

      <!-- Toggle de tema -->
      <ThemeToggle />
    </div>
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("header nav a");

    const callback = (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-blue-500");
            } else {
              item.classList.remove("text-blue-500");
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }
</style>
