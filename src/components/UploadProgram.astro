---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Subir Programa">
  <main id="UploadProgram">
    <h1>Agrega Tus Programas</h1>
    <a target="_blank" href="https://n4chos-organization.gitbook.io/soft-share">Ayuda &  DocumentaciÃ³n ðŸ“‘</a>
    <form id="programForm">
      <div class="input-group">
        <input
          type="text"
          id="nombre"
          minlength="2"
          maxlength="20"
          title="Ingresa el nombre de tu soft ðŸš€ (mÃ¡ximo 20 caracteres)"
          required
        />
        <label for="nombre">Nombre</label>
      </div>

      <div class="input-group">
        <input
          type="text"
          id="link_de_imagen"
          title="Ingresa el link de la imagen que contiene el logo de tu soft ðŸš€"
          required
        />
        <label for="link_de_imagen">Link de Imagen</label>
      </div>

      <div class="input-group">
        <input
          type="text"
          id="link_de_descarga"
          name="link_de_descarga"
          title="Ingresa el link directo de descarga de tu soft ðŸš€"
          required
        />
        <label for="link_de_descarga">Link de Descarga</label>
      </div>

      <div class="input-group">
        <input
          type="text"
          id="detalles"
          maxlength="80"
          title="Ingresa los detalles de tu soft ðŸš€ (mÃ¡ximo 80 caracteres)"
          required
        />
        <label for="detalles">Detalles</label>
      </div>
      <button type="submit" id="black-button">Enviar</button>
    </form>
  </main>
</Layout>

<script type="module">
  // Definir variables para el acceso a la base de datos
  import { neon } from "https://cdn.skypack.dev/@neondatabase/serverless";

  const sql = neon(
    "postgresql://Programs-db_owner:gt7QxJLNI4rP@ep-shrill-brook-a5j8odhx.us-east-2.aws.neon.tech/Programs-db?sslmode=require"
  );

  // ---------- IMPORTANTE PASOS A SEGUIR ---------- //
  // 1. Conseguir los datos del usuario
  // 2. Comprobar que los inputs que contienen url contengan una url con "URL.canParse" de JavaScript
  // 3. Comprobar que el usuario no esta ingresando ningÃºn campo que ya exista en la base de datos
  // 4. Ingresar los datos a la Base De Datos

  // ---------- PASO 1 ---------- //
  document
  .getElementById("programForm")
  .addEventListener("submit", async (event) => {
    event.preventDefault(); // Evitar que el formulario recargue la pÃ¡gina

    const submitButton = document.getElementById("black-button");
    submitButton.disabled = true; // Deshabilita el botÃ³n para evitar mÃºltiples envÃ­os

    const errorFather = document.getElementById("error-father");
    const successFather = document.getElementById("success-father");
    const errorMessage = document.getElementById("error-message");
    const successMessage = document.getElementById("success-message");

    // Ocultar mensajes previos de error y Ã©xito
    errorFather.style.display = "none";
    successFather.style.display = "none";

    // Obtener los valores del formulario
    const nombre = document.getElementById("nombre").value;
    const link_de_imagen = document.getElementById("link_de_imagen").value;
    const link_de_descarga =
      document.getElementById("link_de_descarga").value;
    const detalles = document.getElementById("detalles").value;

    // ---------- PASO 2: Validar URLs ---------- //
    if (!URL.canParse(link_de_descarga) || !URL.canParse(link_de_imagen)) {
      errorMessage.innerText = "No se han ingresado URL vÃ¡lidas.";
      errorFather.style.display = "flex";
      submitButton.disabled = false; // Reactivar el botÃ³n
      return;
    }

    // ---------- PASO 3: Comprobar duplicados ---------- //
    const db_content = await sql`SELECT * FROM programas`;
    const arrayFinal = [];
    db_content.forEach((object) => {
      for (const key in object) {
        arrayFinal.push(object[key]);
      }
    });

    const userValuesArray = [
      nombre,
      link_de_imagen,
      link_de_descarga,
      detalles,
    ];

    const respuestas = [
      "Soft-Share ya tiene un soft con ese nombre ðŸ˜µ",
      "Soft-Share ya tiene un soft con esa imagen ðŸ˜µ",
      "Soft-Share ya tiene un soft con ese link de descarga ðŸ˜µ",
      "Soft-Share ya tiene un soft con esos detalles ðŸ˜µ",
    ];

    for (let i = 0; i < userValuesArray.length; i++) {
      if (arrayFinal.includes(userValuesArray[i])) {
        errorMessage.innerText = respuestas[i];
        errorFather.style.display = "flex";
        submitButton.disabled = false; // Reactivar el botÃ³n
        return;
      }
    }

    // ---------- PASO 4: Insertar datos en la base de datos ---------- //
    try {
      const response = await sql`
        INSERT INTO programas (nombre, link_de_imagen, link_de_descarga, detalles)
        VALUES (${nombre}, ${link_de_imagen}, ${link_de_descarga}, ${detalles})
        RETURNING *`;

      successMessage.innerText = "El programa se ha guardado con Ã©xito âœ…";
      successFather.style.display = "flex";

      // Limpia el formulario despuÃ©s del Ã©xito
      document.getElementById("programForm").reset();

      setTimeout(() => {
        successFather.style.display = "none";
      }, 3000);
    } catch (error) {
      errorMessage.innerText = "Error al guardar el programa. IntÃ©ntalo nuevamente.";
      errorFather.style.display = "flex";
      console.error(error);
    } finally {
      submitButton.disabled = false; // Reactivar el botÃ³n
    }
  });

</script>

<style>
  :root {
    /* FONT */
    --font: "Poppins", sans-serif;

    /* COLORS */
    --bg-color: white;
    --conic-gradient: conic-gradient(
      #ff2e2e,
      #ff831e,
      #fcff51,
      #58ff57,
      #575fff,
      #d257ff,
      #ff57e5,
      #ff1556
    );
  }

  a {
    position: fixed;
    top: 0.5rem;
    left: 0.5rem;
    align-items: center;
    font-size: 1.2rem;
    font-weight: bold;
    padding: 6px 14px;
    border-radius: 6px;
    color: var(--text-color);
    border: none;
    box-shadow: 0px 0.5px 1px rgba(0, 0, 0, 0.1);
    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;
    transition: box-shadow 0.3s ease;
    text-decoration: none;
    backdrop-filter: blur(10px);
    z-index: 1;

    &:hover {
      box-shadow: 0px 1px 10px 1px rgba(0, 0, 0, 0.1);
      text-decoration: underline;
      text-decoration-thickness: 0.1em;
      cursor: pointer;
    }
  }

  main {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-bottom: 100px;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "geist";
  }

  .input-group {
    position: relative;
    margin: 20px 0;
  }

  .input-group label {
    position: absolute;
    top: 50%;
    left: 15px;
    transform: translateY(-50%);
    font-size: 16px;
    color: black;
    padding: 0 5px;
    pointer-events: none;
    transition: 0.5s;
  }

  .input-group input {
    width: 100%;
    height: 40px;
    font-size: 16px;
    color: #000;
    padding: 0 15px;
    background: transparent;
    border: 2px solid #ccc;
    outline: none;
    border-radius: 5px;
    transition: all 0.3s ease;

    &:focus {
      border-color: black;
    }
  }

  .input-group input:focus ~ label,
  .input-group input:valid ~ label {
    top: 0;
    font-size: 14px;
    background-color: var(--background-color);
  }

  #black-button {
    height: 3em;
    width: 8em;
    border-radius: 10px;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    cursor: pointer;
    border: 2px solid black;
    transition:
      transform,
      box-shadow 0.3s ease;
  }

  #black-button:hover {
    box-shadow: 0px 1px 15px 3px rgba(0, 0, 0, 0.2);
  }

  #black-button::before {
    content: "";
    position: absolute;
    width: 110%;
    height: 350%;
    background: var(--conic-gradient);
  }

  #black-button::after {
    content: "Enviar";
    position: absolute;
    background-color: var(--bg-color);
    width: 95%;
    height: 89%;
    border-radius: 0.4em;
    font-size: 1rem;
    color: black;
    font-weight: 500;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  #black-button:hover::before {
    animation: spin 1.5s infinite linear;
  }

  @keyframes slidebg {
    to {
      background-position: 20vw;
    }
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
</style>
