---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Subir Programa">
  <main id="UploadProgram">
    <h1>Agrega Tus Programas</h1>
    <form id="programForm">
      <div class="input-group">
        <input type="text" id="nombre" minlength="2" maxlength="20" required />
        <label for="">Nombre</label>
      </div>

      <div class="input-group">
        <input type="text" id="link_de_imagen" required />
        <label for="link_de_imagen">Link de Imagen</label>
      </div>

      <div class="input-group">
        <input
          type="text"
          id="link_de_descarga"
          name="link_de_descarga"
          required
        />
        <label for="link_de_descarga">Link de Descarga</label>
      </div>

      <div class="input-group">
        <input id="detalles" minlength="10" maxlength="80" required />
        <label for="detalles">Detalles</label>
      </div>
      <button type="submit" id="black-button">Enviar</button>
    </form>
  </main>
</Layout>
<div class="hola"></div>

<script type="module">
  import { neon } from "https://cdn.skypack.dev/@neondatabase/serverless";

  // Configura la conexión a la base de datos Neon
  const sql = neon(
    "postgresql://Programs-db_owner:gt7QxJLNI4rP@ep-shrill-brook-a5j8odhx.us-east-2.aws.neon.tech/Programs-db?sslmode=require"
  );

  // Manejador del evento de envío del formulario
  document
    .getElementById("programForm")
    .addEventListener("submit", async (event) => {
      event.preventDefault(); // Evitar que el formulario recargue la página

      // Obtener los valores del formulario
      const nombre = document.getElementById("nombre").value;
      const link_de_imagen = document.getElementById("link_de_imagen").value;
      const link_de_descarga =
        document.getElementById("link_de_descarga").value;
      const detalles = document.getElementById("detalles").value;

      // Comprobación de URL
      if (!URL.canParse(link_de_descarga) || !URL.canParse(link_de_imagen)) {
        alert("No se han ingresado url en los campos de link");
        return;
      }

      // Realiza la consulta directamente a Neon desde el frontend
      try {
        const response = await sql`
                INSERT INTO programas (nombre, link_de_imagen, link_de_descarga, detalles)
                VALUES (${nombre}, ${link_de_imagen}, ${link_de_descarga}, ${detalles})
                RETURNING *`;

        console.log("Programa guardado:", response);
      } catch (error) {
        console.error("Error al guardar el programa:", error);
        alert("Hubo un error al guardar el programa");
      }
    });
</script>

<style>

:root{
  /* FONT */
  --font: 'Poppins', sans-serif;;

  /* COLORS */
  --bg-color: white;
  --conic-gradient: conic-gradient(
    #FF2E2E,
    #FF831E,
    #FCFF51,
    #58FF57,
    #575FFF,
    #D257FF,
    #FF57E5,
    #FF1556
  );
}
  .hola {
    height: 200px;
  }

  main {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "geist";
  }

  .input-group {
    position: relative;
    margin: 20px 0;
  }

  .input-group label {
    position: absolute;
    top: 50%;
    left: 15px;
    transform: translateY(-50%);
    font-size: 16px;
    color: black;
    padding: 0 5px;
    pointer-events: none;
    transition: 0.5s;
  }

  .input-group input {
    width: 100%;
    height: 40px;
    font-size: 16px;
    color: #000;
    padding: 0 15px;
    background: transparent;
    border: 2px solid #ccc;
    outline: none;
    border-radius: 5px;
    transition: all 0.3s ease;

    &:focus {
      border-color: black;
    }
  }

  .input-group input:focus ~ label,
  .input-group input:valid ~ label {
    top: 0;
    font-size: 14px;
    background-color: var(--background-color);
  }

  #black-button {
    height: 3em;
    width: 8em;
    border-radius: 10px;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    cursor: pointer;
    transition: transform, box-shadow 0.3s ease;
  }

  #black-button:hover {
    box-shadow: 0px	1px 15px 3px  rgba(0, 0, 0, 0.2);
  }

  #black-button::before {
    content: "";
    position: absolute;
    width: 110%;
    height: 350%;
    background: var(--conic-gradient);
  }

  #black-button::after {
    content: "Enviar";
    position: absolute;
    background-color: var(--bg-color);
    width: 95%;
    height: 89%;
    border-radius: 0.4em;
    font-size: 1rem;
    color: black;
    font-weight: 500;
    display: flex;
    align-items: center;
    justify-content: center;
  }


  #black-button:hover::before {
    animation: spin 1.5s infinite linear;
  }

  @keyframes slidebg {
    to {
      background-position: 20vw;
    }
  }

  
@keyframes spin {
  to{
    transform: rotate(360deg);
  }
}
</style>
